version "3.3"

Class DemakeShadersHandler : StaticEventHandler
{
	transient ui CVar	gl_demakeshaders_palette,
						gl_demakeshaders_paldither;
	transient ui int	palette;

	override void RenderOverlay( RenderEvent e )
	{
		PlayerInfo p = players[consoleplayer];
		if ( !gl_demakeshaders_paldither ) gl_demakeshaders_paldither = CVar.FindCVar('gl_demakeshaders_paldither');
		if ( !gl_demakeshaders_palette ) gl_demakeshaders_palette = CVar.FindCVar('gl_demakeshaders_palette');
		palette = gl_demakeshaders_palette.GetInt();
		switch ( palette )
		{
		case 1:
			Shader.SetEnabled(p,"NES_palette",true);
			Shader.SetUniform1f(p,"NES_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(61);
			DisablePalette(palette+1);
			break;
		case 2:
			Shader.SetEnabled(p,"NESNTSC_palette",true);
			Shader.SetUniform1f(p,"NESNTSC_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 3:
			Shader.SetEnabled(p,"NESFull_palette",true);
			Shader.SetUniform1f(p,"NESFull_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 4:
			Shader.SetEnabled(p,"SegaMaster_palette",true);
			Shader.SetUniform1f(p,"SegaMaster_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 5:
			Shader.SetEnabled(p,"TIANTSC_palette",true);
			Shader.SetUniform1f(p,"TIANTSC_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 6:
			Shader.SetEnabled(p,"TIAPAL_palette",true);
			Shader.SetUniform1f(p,"TIAPAL_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 7:
			Shader.SetEnabled(p,"CTIA_palette",true);
			Shader.SetUniform1f(p,"CTIA_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 8:
			Shader.SetEnabled(p,"GTIA_palette",true);
			Shader.SetUniform1f(p,"GTIA_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 9:
			Shader.SetEnabled(p,"AppleIIhires_palette",true);
			Shader.SetUniform1f(p,"AppleIIhires_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 10:
			Shader.SetEnabled(p,"AppleIIlowres_palette",true);
			Shader.SetUniform1f(p,"AppleIIlowres_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 11:
			Shader.SetEnabled(p,"CommodoreVIC20Five_palette",true);
			Shader.SetUniform1f(p,"CommodoreVIC20Five_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 12:
			Shader.SetEnabled(p,"CommodoreVIC20Nine_palette",true);
			Shader.SetUniform1f(p,"CommodoreVIC20Nine_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 13:
			Shader.SetEnabled(p,"Commodore64_palette",true);
			Shader.SetUniform1f(p,"Commodore64_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 14:
			Shader.SetEnabled(p,"Commodore16Plus4_palette",true);
			Shader.SetUniform1f(p,"Commodore16Plus4_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 15:
			Shader.SetEnabled(p,"TandyColorC3_palette",true);
			Shader.SetUniform1f(p,"TandyColorC3_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 16:
			Shader.SetEnabled(p,"ZXSpectrum_palette",true);
			Shader.SetUniform1f(p,"ZXSpectrum_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 17:
			Shader.SetEnabled(p,"MattelAquarius_palette",true);
			Shader.SetUniform1f(p,"MattelAquarius_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 18:
			Shader.SetEnabled(p,"SAMCoupe_palette",true);
			Shader.SetUniform1f(p,"SAMCoupe_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 19:
			Shader.SetEnabled(p,"MSX_palette",true);
			Shader.SetUniform1f(p,"MSX_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 20:
			Shader.SetEnabled(p,"MSX2Mode6_palette",true);
			Shader.SetUniform1f(p,"MSX2Mode6_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 21:
			Shader.SetEnabled(p,"MSX2Mode7_palette",true);
			Shader.SetUniform1f(p,"MSX2Mode7_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 22:
			Shader.SetEnabled(p,"MSX2Mode8_palette",true);
			Shader.SetUniform1f(p,"MSX2Mode8_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 23:
			Shader.SetEnabled(p,"ThomsonTO5_palette",true);
			Shader.SetUniform1f(p,"ThomsonTO5_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 24:
			Shader.SetEnabled(p,"AmstradCPCGreen_palette",true);
			Shader.SetUniform1f(p,"AmstradCPCGreen_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 25:
			Shader.SetEnabled(p,"AmstradCPCColor_palette",true);
			Shader.SetUniform1f(p,"AmstradCPCColor_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 26:
			Shader.SetEnabled(p,"CGASimGray_palette",true);
			Shader.SetUniform1f(p,"CGASimGray_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 27:
			Shader.SetEnabled(p,"CGA1High_palette",true);
			Shader.SetUniform1f(p,"CGA1High_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 28:
			Shader.SetEnabled(p,"CGA1Low_palette",true);
			Shader.SetUniform1f(p,"CGA1Low_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 29:
			Shader.SetEnabled(p,"CGA2High_palette",true);
			Shader.SetUniform1f(p,"CGA2High_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 30:
			Shader.SetEnabled(p,"CGA2Low_palette",true);
			Shader.SetUniform1f(p,"CGA2Low_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 31:
			Shader.SetEnabled(p,"CGAMode5High_palette",true);
			Shader.SetUniform1f(p,"CGAMode5High_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 32:
			Shader.SetEnabled(p,"CGAMode5Low_palette",true);
			Shader.SetUniform1f(p,"CGAMode5Low_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 33:
			Shader.SetEnabled(p,"CGAplusPCjr_palette",true);
			Shader.SetUniform1f(p,"CGAplusPCjr_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 34:
			Shader.SetEnabled(p,"CGAplusTandy_palette",true);
			Shader.SetUniform1f(p,"CGAplusTandy_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 35:
			Shader.SetEnabled(p,"AcornRISCOS_palette",true);
			Shader.SetUniform1f(p,"AcornRISCOS_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 36:
			Shader.SetEnabled(p,"Windows16_palette",true);
			Shader.SetUniform1f(p,"Windows16_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 37:
			Shader.SetEnabled(p,"Windows20_palette",true);
			Shader.SetUniform1f(p,"Windows20_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 38:
			Shader.SetEnabled(p,"Windows256_palette",true);
			Shader.SetUniform1f(p,"Windows256_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 39:
			Shader.SetEnabled(p,"Macintosh16_palette",true);
			Shader.SetUniform1f(p,"Macintosh16_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 40:
			Shader.SetEnabled(p,"Macintosh256_palette",true);
			Shader.SetUniform1f(p,"Macintosh256_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 41:
			Shader.SetEnabled(p,"UNIX_palette",true);
			Shader.SetUniform1f(p,"UNIX_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 42:
			Shader.SetEnabled(p,"Web_palette",true);
			Shader.SetUniform1f(p,"Web_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 43:
			Shader.SetEnabled(p,"676levelsRGB_palette",true);
			Shader.SetUniform1f(p,"676levelsRGB_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 44:
			Shader.SetEnabled(p,"676levelsRGBplusGrays_palette",true);
			Shader.SetUniform1f(p,"676levelsRGBplusGrays_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 45:
			Shader.SetEnabled(p,"685levelsRGB_palette",true);
			Shader.SetUniform1f(p,"685levelsRGB_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 46:
			Shader.SetEnabled(p,"685levelsRGBplusGrays_palette",true);
			Shader.SetUniform1f(p,"685levelsRGBplusGrays_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 47:
			Shader.SetEnabled(p,"Adaptive_palette",true);
			Shader.SetUniform1f(p,"Adaptive_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 48:
			Shader.SetEnabled(p,"Selective_palette",true);
			Shader.SetUniform1f(p,"Selective_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 49:
			Shader.SetEnabled(p,"Perceptual_palette",true);
			Shader.SetUniform1f(p,"Perceptual_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 50:
			Shader.SetEnabled(p,"AmigaCS5_palette",true);
			Shader.SetUniform1f(p,"AmigaCS5_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 51:
			Shader.SetEnabled(p,"AmigaCSEHB_palette",true);
			Shader.SetUniform1f(p,"AmigaCSEHB_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 52:
			Shader.SetEnabled(p,"R1G1B1_palette",true);
			Shader.SetUniform1f(p,"R1G1B1_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 53:
			Shader.SetEnabled(p,"4bitRGBI_palette",true);
			Shader.SetUniform1f(p,"4bitRGBI_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 54:
			Shader.SetEnabled(p,"3levelRGB_palette",true);
			Shader.SetUniform1f(p,"3levelRGB_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 55:
			Shader.SetEnabled(p,"R3G3B2_palette",true);
			Shader.SetUniform1f(p,"R3G3B2_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 56:
			Shader.SetEnabled(p,"R3G2B3_palette",true);
			Shader.SetUniform1f(p,"R3G2B3_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 57:
			Shader.SetEnabled(p,"R2G3B3_palette",true);
			Shader.SetUniform1f(p,"R2G3B3_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 58:
			Shader.SetEnabled(p,"Monochrome_palette",true);
			Shader.SetUniform1f(p,"Monochrome_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 59:
			Shader.SetEnabled(p,"2bitGrayscale_palette",true);
			Shader.SetUniform1f(p,"2bitGrayscale_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 60:
			Shader.SetEnabled(p,"4bitGrayscale_palette",true);
			Shader.SetUniform1f(p,"4bitGrayscale_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(palette+1);
			break;
		case 61:
			Shader.SetEnabled(p,"8bitGrayscale_palette",true);
			Shader.SetUniform1f(p,"8bitGrayscale_palette","paldither",gl_demakeshaders_paldither.GetFloat());
			DisablePalette(palette-1);
			DisablePalette(1);
			break;
		default:
			DisablePalette(0);
		}
	}


	ui void DisablePalette(int pal)
	{
		PlayerInfo p = players[consoleplayer];
		switch (pal)
		{
		case 1:
			Shader.SetEnabled(p,"NES_palette",false);
			break;
		case 2:
			Shader.SetEnabled(p,"NESNTSC_palette",false);
			break;
		case 3:
			Shader.SetEnabled(p,"NESFull_palette",false);
			break;
		case 4:
			Shader.SetEnabled(p,"SegaMaster_palette",false);
			break;
		case 5:
			Shader.SetEnabled(p,"TIANTSC_palette",false);
			break;
		case 6:
			Shader.SetEnabled(p,"TIAPAL_palette",false);
			break;
		case 7:
			Shader.SetEnabled(p,"CTIA_palette",false);
			break;
		case 8:
			Shader.SetEnabled(p,"GTIA_palette",false);
			break;
		case 9:
			Shader.SetEnabled(p,"AppleIIhires_palette",false);
			break;
		case 10:
			Shader.SetEnabled(p,"AppleIIlowres_palette",false);
			break;
		case 11:
			Shader.SetEnabled(p,"CommodoreVIC20Five_palette",false);
			break;
		case 12:
			Shader.SetEnabled(p,"CommodoreVIC20Nine_palette",false);
			break;
		case 13:
			Shader.SetEnabled(p,"Commodore64_palette",false);
			break;
		case 14:
			Shader.SetEnabled(p,"Commodore16Plus4_palette",false);
			break;
		case 15:
			Shader.SetEnabled(p,"TandyColorC3_palette",false);
			break;
		case 16:
			Shader.SetEnabled(p,"ZXSpectrum_palette",false);
			break;
		case 17:
			Shader.SetEnabled(p,"MattelAquarius_palette",false);
			break;
		case 18:
			Shader.SetEnabled(p,"SAMCoupe_palette",false);
			break;
		case 19:
			Shader.SetEnabled(p,"MSX_palette",false);
			break;
		case 20:
			Shader.SetEnabled(p,"MSX2Mode6_palette",false);
			break;
		case 21:
			Shader.SetEnabled(p,"MSX2Mode7_palette",false);
			break;
		case 22:
			Shader.SetEnabled(p,"MSX2Mode8_palette",false);
			break;
		case 23:
			Shader.SetEnabled(p,"ThomsonTO5_palette",false);
			break;
		case 24:
			Shader.SetEnabled(p,"AmstradCPCGreen_palette",false);
			break;
		case 25:
			Shader.SetEnabled(p,"AmstradCPCColor_palette",false);
			break;
		case 26:
			Shader.SetEnabled(p,"CGASimGray_palette",false);
			break;
		case 27:
			Shader.SetEnabled(p,"CGA1High_palette",false);
			break;
		case 28:
			Shader.SetEnabled(p,"CGA1Low_palette",false);
			break;
		case 29:
			Shader.SetEnabled(p,"CGA2High_palette",false);
			break;
		case 30:
			Shader.SetEnabled(p,"CGA2Low_palette",false);
			break;
		case 31:
			Shader.SetEnabled(p,"CGAMode5High_palette",false);
			break;
		case 32:
			Shader.SetEnabled(p,"CGAMode5Low_palette",false);
			break;
		case 33:
			Shader.SetEnabled(p,"CGAplusPCjr_palette",false);
			break;
		case 34:
			Shader.SetEnabled(p,"CGAplusTandy_palette",false);
			break;
		case 35:
			Shader.SetEnabled(p,"AcornRISCOS_palette",false);
			break;
		case 36:
			Shader.SetEnabled(p,"Windows16_palette",false);
			break;
		case 37:
			Shader.SetEnabled(p,"Windows20_palette",false);
			break;
		case 38:
			Shader.SetEnabled(p,"Windows256_palette",false);
			break;
		case 39:
			Shader.SetEnabled(p,"Macintosh16_palette",false);
			break;
		case 40:
			Shader.SetEnabled(p,"Macintosh256_palette",false);
			break;
		case 41:
			Shader.SetEnabled(p,"UNIX_palette",false);
			break;
		case 42:
			Shader.SetEnabled(p,"Web_palette",false);
			break;
		case 43:
			Shader.SetEnabled(p,"676levelsRGB_palette",false);
			break;
		case 44:
			Shader.SetEnabled(p,"676levelsRGBplusGrays_palette",false);
			break;
		case 45:
			Shader.SetEnabled(p,"685levelsRGB_palette",false);
			break;
		case 46:
			Shader.SetEnabled(p,"685levelsRGBplusGrays_palette",false);
			break;
		case 47:
			Shader.SetEnabled(p,"Adaptive_palette",false);
			break;
		case 48:
			Shader.SetEnabled(p,"Selective_palette",false);
			break;
		case 49:
			Shader.SetEnabled(p,"Perceptual_palette",false);
			break;
		case 50:
			Shader.SetEnabled(p,"AmigaCS5_palette",false);
			break;
		case 51:
			Shader.SetEnabled(p,"AmigaCSEHB_palette",false);
			break;
		case 52:
			Shader.SetEnabled(p,"R1G1B1_palette",false);
			break;
		case 53:
			Shader.SetEnabled(p,"4bitRGBI_palette",false);
			break;
		case 54:
			Shader.SetEnabled(p,"3levelRGB_palette",false);
			break;
		case 55:
			Shader.SetEnabled(p,"R3G3B2_palette",false);
			break;
		case 56:
			Shader.SetEnabled(p,"R3G2B3_palette",false);
			break;
		case 57:
			Shader.SetEnabled(p,"R2G3B3_palette",false);
			break;
		case 58:
			Shader.SetEnabled(p,"Monochrome_palette",false);
			break;
		case 59:
			Shader.SetEnabled(p,"2bitGrayscale_palette",false);
			break;
		case 60:
			Shader.SetEnabled(p,"4bitGrayscale_palette",false);
			break;
		case 61:
			Shader.SetEnabled(p,"8bitGrayscale_palette",false);
			break;
		Default:
			Shader.SetEnabled(p,"NES_palette",false);
			Shader.SetEnabled(p,"NESNTSC_palette",false);
			Shader.SetEnabled(p,"NESFull_palette",false);
			Shader.SetEnabled(p,"SegaMaster_palette",false);
			Shader.SetEnabled(p,"TIANTSC_palette",false);
			Shader.SetEnabled(p,"TIAPAL_palette",false);
			Shader.SetEnabled(p,"CTIA_palette",false);
			Shader.SetEnabled(p,"GTIA_palette",false);
			Shader.SetEnabled(p,"AppleIIhires_palette",false);
			Shader.SetEnabled(p,"AppleIIlowres_palette",false);
			Shader.SetEnabled(p,"CommodoreVIC20Five_palette",false);
			Shader.SetEnabled(p,"CommodoreVIC20Nine_palette",false);
			Shader.SetEnabled(p,"Commodore64_palette",false);
			Shader.SetEnabled(p,"Commodore16Plus4_palette",false);
			Shader.SetEnabled(p,"TandyColorC3_palette",false);
			Shader.SetEnabled(p,"ZXSpectrum_palette",false);
			Shader.SetEnabled(p,"MattelAquarius_palette",false);
			Shader.SetEnabled(p,"SAMCoupe_palette",false);
			Shader.SetEnabled(p,"MSX_palette",false);
			Shader.SetEnabled(p,"MSX2Mode6_palette",false);
			Shader.SetEnabled(p,"MSX2Mode7_palette",false);
			Shader.SetEnabled(p,"MSX2Mode8_palette",false);
			Shader.SetEnabled(p,"ThomsonTO5_palette",false);
			Shader.SetEnabled(p,"AmstradCPCGreen_palette",false);
			Shader.SetEnabled(p,"AmstradCPCColor_palette",false);
			Shader.SetEnabled(p,"CGASimGray_palette",false);
			Shader.SetEnabled(p,"CGA1High_palette",false);
			Shader.SetEnabled(p,"CGA1Low_palette",false);
			Shader.SetEnabled(p,"CGA2High_palette",false);
			Shader.SetEnabled(p,"CGA2Low_palette",false);
			Shader.SetEnabled(p,"CGAMode5High_palette",false);
			Shader.SetEnabled(p,"CGAMode5Low_palette",false);
			Shader.SetEnabled(p,"CGAplusPCjr_palette",false);
			Shader.SetEnabled(p,"CGAplusTandy_palette",false);
			Shader.SetEnabled(p,"AcornRISCOS_palette",false);
			Shader.SetEnabled(p,"Windows16_palette",false);
			Shader.SetEnabled(p,"Windows20_palette",false);
			Shader.SetEnabled(p,"Windows256_palette",false);
			Shader.SetEnabled(p,"Macintosh16_palette",false);
			Shader.SetEnabled(p,"Macintosh256_palette",false);
			Shader.SetEnabled(p,"UNIX_palette",false);
			Shader.SetEnabled(p,"Web_palette",false);
			Shader.SetEnabled(p,"676levelsRGB_palette",false);
			Shader.SetEnabled(p,"676levelsRGBplusGrays_palette",false);
			Shader.SetEnabled(p,"685levelsRGB_palette",false);
			Shader.SetEnabled(p,"685levelsRGBplusGrays_palette",false);
			Shader.SetEnabled(p,"Adaptive_palette",false);
			Shader.SetEnabled(p,"Selective_palette",false);
			Shader.SetEnabled(p,"Perceptual_palette",false);
			Shader.SetEnabled(p,"AmigaCS5_palette",false);
			Shader.SetEnabled(p,"AmigaCSEHB_palette",false);
			Shader.SetEnabled(p,"R1G1B1_palette",false);
			Shader.SetEnabled(p,"4bitRGBI_palette",false);
			Shader.SetEnabled(p,"3levelRGB_palette",false);
			Shader.SetEnabled(p,"R3G3B2_palette",false);
			Shader.SetEnabled(p,"R3G2B3_palette",false);
			Shader.SetEnabled(p,"R2G3B3_palette",false);
			Shader.SetEnabled(p,"Monochrome_palette",false);
			Shader.SetEnabled(p,"2bitGrayscale_palette",false);
			Shader.SetEnabled(p,"4bitGrayscale_palette",false);
			Shader.SetEnabled(p,"8bitGrayscale_palette",false);
		}
	}


	override void ConsoleProcess( ConsoleEvent e )
	{
		PlayerInfo p = players[consoleplayer];
		if ( e.Name ~== "resetdemakeshadersvars" )
		{
			switch( e.args[0] )
			{
			case 0:
				if ( !gl_demakeshaders_palette ) gl_demakeshaders_palette = CVar.FindCVar('gl_demakeshaders_palette');
				if ( !gl_demakeshaders_paldither ) gl_demakeshaders_paldither = CVar.FindCVar('gl_demakeshaders_paldither');
				gl_demakeshaders_paldither.ResetToDefault();
				break;
			}
		}
	}
}